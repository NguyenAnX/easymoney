{"version":3,"sources":["components/RoundPosition.js","components/Extra.js","components/PlayerRoundResult.js","components/GameRun.js","App.js","serviceWorker.js","index.js"],"names":["RoundPosition","props","positions","player","playerIndex","onPositionClick","react_default","a","createElement","row","justify","type","gutter","Object","keys","map","key","selected","position","col","es_button","onClick","shape","Extra","onClickItem","score","name","icon","PlayerRoundResult","items","onRemoveItem","onRemovePosition","tag","color","item","index","e","preventDefault","initPlayers","earn","roundResult","initPositions","1","2","3","4","GameRun","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initColumns","columns","title","dataIndex","render","text","record","RoundPosition_RoundPosition","state","Extra_Extra","onClickExtraItem","PlayerRoundResult_PlayerRoundResult","removePlayerItem","players","push","forceUpdate","itemIndex","splice","positionIndex","addedPosition","removedPosition","isRoundCheckSumOK","checkSum","reduce","console","log","onNextRoundClick","updateRoundScore","resetPositions","onClearRoundResult","resetPlayersResult","newScore","objectSpread","setState","memo","defineProperty","card","bordered","disabled","table","dataSource","pagination","React","Component","App","className","components_GameRun","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.12f53256.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Row, Col } from 'antd';\n\nexport const RoundPosition = (props) => {\n  const { positions, player, playerIndex, onPositionClick } = props;\n  return (\n    <Row justify=\"start\" type=\"flex\" gutter={4}>\n      {\n        Object.keys(positions).map((key) => {\n          return (\n            positions[key].selected == false && player.position == 0 ?\n              <Col>\n                <Button \n                  onClick={() => onPositionClick(playerIndex, key)}\n                  shape=\"circle\">\n                  {key}\n                </Button>\n              </Col> : null\n          )\n        })\n      }\n    </Row>\n  )\n}","import React from 'react';\nimport { Table, Button, Tag, Row, Col, Divider} from 'antd';\n\nexport const Extra = (props) => {\n  const { playerIndex } = props;\n  return (\n    <Row gutter={4} justify=\"start\" type=\"flex\">\n      <Col>\n        <Button\n          onClick={() => {\n            props.onClickItem(playerIndex, { score: 1, name: \"Black\" });\n          }}\n          shape=\"primary\"\n          icon=\"line\"\n          >\n            </Button>\n      </Col>\n      <Col>\n        <Button\n          onClick={() => {\n            props.onClickItem(playerIndex, { score: 2, name: \"Red\" });\n          }}\n          shape=\"primary\"\n          icon=\"pause\"\n        ></Button>\n      </Col>\n      <Col>\n        <Button\n          onClick={() => {\n            props.onClickItem(playerIndex, { score: 3, name: \"3 Pairs\" });\n          }}\n          shape=\"primary\"\n          icon=\"menu\"\n        ></Button>\n      </Col>\n      <Col>\n        <Button\n          onClick={() => {\n            props.onClickItem(playerIndex, { score: 4, name: \"FoaK\" });\n          }}\n          shape=\"primary\"\n          icon=\"appstore\"\n        ></Button>\n      </Col>\n      <Col>\n        <Button\n          onClick={() => {\n            props.onClickItem(playerIndex, { score: -1, name: \"Black\" });\n          }}\n          shape=\"danger\"\n          icon=\"line\"\n        ></Button>\n      </Col>\n      <Col>\n        <Button\n          onClick={() => {\n            props.onClickItem(playerIndex, { score: -2, name: \"Red\" });\n          }}\n          shape=\"danger\"\n          icon=\"pause\"\n        ></Button>\n      </Col>\n      <Col>\n        <Button\n          onClick={() => {\n            props.onClickItem(playerIndex, { score: -3, name: \"3 Pairs\" });\n          }}\n          shape=\"danger\"\n          icon=\"menu\"\n        ></Button>\n      </Col>\n      <Col>\n        <Button\n          onClick={() => {\n            props.onClickItem(playerIndex, { score: -4, name: \"FoaK\" });\n          }}\n          shape=\"danger\"\n          icon=\"appstore\"\n        ></Button>\n      </Col>\n    </Row>\n\n  )\n}","import React from 'react';\nimport { Row, Col, Tag, Button } from 'antd';\n\nexport const PlayerRoundResult = (props) => {\n  const { player, playerIndex, items, onRemoveItem, onRemovePosition } = props;\n\n  return (\n    <Row justify=\"start\" type=\"flex\">\n      {player.position != 0 ?\n        <Col>\n          <Tag\n            color=\"#108ee9\"\n            onClick={() => onRemovePosition(playerIndex)}\n          >\n            {player.position}\n          </Tag>\n        </Col> : null}\n      {\n        items.map((item, index) => {\n          return (\n            <Col key={index}>\n              <Tag\n                color={item.score >= 0 ? \"#87d068\" : \"#f50\"}\n                onClick={(e) => {\n                  e.preventDefault();\n                  onRemoveItem(playerIndex, index)\n                }}>\n                {item.name}\n              </Tag>\n            </Col>\n          )\n        })\n      }\n    </Row>\n  );\n}","import React from 'react';\nimport { Table, Button, Tag, Row, Col, Card } from 'antd';\nimport { RoundPosition } from './RoundPosition';\nimport { Extra } from './Extra';\nimport { PlayerRoundResult } from './PlayerRoundResult';\n\nconst initPlayers = [\n  {\n    key: '1',\n    name: 'An',\n    score: 0,\n    earn: 0,\n    roundResult: [],\n    position: 0,\n  },\n  {\n    key: '2',\n    name: 'Đạt',\n    score: 0,\n    earn: 0,\n    roundResult: [],\n    position: 0,\n  },\n  {\n    key: '3',\n    name: 'Sơn',\n    score: 0,\n    earn: 0,\n    roundResult: [],\n    position: 0,\n  },\n  {\n    key: '4',\n    name: 'Thịnh',\n    score: 0,\n    earn: 0,\n    roundResult: [],\n    position: 0,\n  },\n  {\n    key: '5',\n    name: 'Trung',\n    score: 0,\n    earn: 0,\n    roundResult: [],\n    position: 0,\n  },\n  {\n    key: '6',\n    name: 'Vinh',\n    score: 0,\n    earn: 0,\n    roundResult: [],\n    position: 0,\n  },\n]\n\nconst initPositions = {\n  1: {\n    selected: false,\n    score: 2,\n  },\n  2: {\n    selected: false,\n    score: 1,\n  },\n  3: {\n    selected: false,\n    score: -1,\n  },\n  4: {\n    selected: false,\n    score: -2,\n  },\n}\n\nclass GameRun extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      players: initPlayers,\n      positions: initPositions,\n    }\n    this.initColumns()\n  }\n\n  initColumns = () => {\n    this.columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n      },\n      {\n        title: 'Position',\n        dataIndex: '',\n        render: (text, record, index) => <RoundPosition positions={this.state.positions} player={record} playerIndex={index} onPositionClick={this.onPositionClick} />,\n      },\n      {\n        title: 'Extra',\n        dataIndex: 'extra',\n        render: (text, record, index) => <Extra playerIndex={index} onClickItem={this.onClickExtraItem} />\n      },\n      {\n        title: 'Round Result',\n        dataIndex: 'roundResult',\n        render: (text, record, index) => <PlayerRoundResult player={record} playerIndex={index} items={record.roundResult} onRemoveItem={this.removePlayerItem} onRemovePosition={this.onRemovePosition} />\n      },\n      {\n        title: 'Earn',\n        dataIndex: 'earn',\n      },\n      {\n        title: 'Score',\n        dataIndex: 'score',\n      },\n    ];\n  }\n\n  onClickExtraItem = (playerIndex, item) => {\n    let player = this.state.players[playerIndex]\n    player.earn += item.score\n    player.roundResult.push(item)\n    this.forceUpdate()\n  }\n\n  removePlayerItem = (playerIndex, itemIndex) => {\n    let player = this.state.players[playerIndex]\n    let item = player.roundResult[itemIndex]\n    player.earn -= item.score\n    player.roundResult.splice(itemIndex, 1)\n    this.forceUpdate()\n  }\n\n  onPositionClick = (playerIndex, positionIndex) => {\n    let addedPosition = this.state.positions[positionIndex]\n    addedPosition.selected = true\n\n    let player = this.state.players[playerIndex]\n    player.position = positionIndex\n    player.earn += addedPosition.score\n\n    this.forceUpdate()\n  }\n\n  onRemovePosition = (playerIndex) => {\n    let player = this.state.players[playerIndex]\n    let positionIndex = player.position\n    let removedPosition = this.state.positions[positionIndex]\n\n    removedPosition.selected = false\n    player.position = 0\n    player.earn -= removedPosition.score\n\n    this.forceUpdate()\n  }\n\n  isRoundCheckSumOK = () => {\n    const players = this.state.players\n    const checkSum = players.reduce((checkSum, player) => {\n      return checkSum + player.earn\n    }, 0)\n\n    console.log(\"checksum:\", checkSum)\n    return checkSum == 0\n  }\n\n  onNextRoundClick = () => {\n    this.updateRoundScore()\n    this.resetPositions()\n  }\n\n  onClearRoundResult = () => {\n    this.resetPlayersResult()\n    this.resetPositions()\n  }\n\n  updateRoundScore = () => {\n    const players = this.state.players.map((player) => {\n      const newScore = player.score + player.earn\n      return {\n        ...player,\n        earn: 0,\n        score: newScore,\n        position: 0,\n        roundResult: [],\n      }\n    })\n\n    this.setState({\n      players,\n    })\n  }\n\n  resetPlayersResult = () => {\n    const players = this.state.players.map((player) => {\n      return {\n        ...player,\n        earn: 0,\n        position: 0,\n        roundResult: [],\n      }\n    })\n\n    this.setState({\n      players,\n    })\n  }\n\n  resetPositions = () => {\n    const positions = Object.keys(this.state.positions).reduce((memo, positionIndex) => {\n      const position = this.state.positions[positionIndex]\n      return {\n        ...memo,\n        [positionIndex]: {\n          selected: false,\n          score: position.score,\n        }\n      }\n    }, {})\n\n    this.setState({\n      positions,\n    })\n  }\n\n  render() {\n    return (\n      <Card bordered={false}>\n        <Row gutter={8} justify=\"start\" type=\"flex\">\n          <Col>\n            <Button\n              disabled={!this.isRoundCheckSumOK()}\n              onClick={this.onNextRoundClick}\n              type=\"primary\"\n            >\n              Next Round\n            </Button>\n          </Col>\n          <Col>\n            <Button onClick={this.onClearRoundResult}>Clear</Button>\n          </Col>\n          <Col>\n            <Button type=\"danger\">End Game</Button>\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Table\n            dataSource={this.state.players}\n            columns={this.columns}\n            bordered\n            pagination={false}\n          />\n        </Row>\n      </Card>\n    )\n  }\n}\n\nexport default GameRun;\n","import React from 'react';\nimport GameRun from './components/GameRun';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <GameRun />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}