{"version":3,"sources":["components/RoundPosition.js","components/PlayerRoundResult.js","components/GameRun.js","App.js","serviceWorker.js","index.js"],"names":["winItems","name","score","loseItems","RoundPosition","props","positions","player","playerIndex","onPositionClick","onExtraItemClick","winMenu","react_default","a","createElement","menu","style","backgroundColor","map","item","index","Item","onClick","key","loseMenu","row","justify","type","gutter","Object","keys","selected","position","col","es_button","shape","dropdown","overlay","icon","PlayerRoundResult","items","onRemoveItem","onRemovePosition","tag","color","e","preventDefault","initPlayers","earn","roundResult","initPositions","1","2","3","4","GameRun","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","initColumns","columns","title","dataIndex","render","text","record","RoundPosition_RoundPosition","state","selectPosition","addExtraItem","PlayerRoundResult_PlayerRoundResult","removePlayerItem","removePlayerPosition","players","push","forceUpdate","itemIndex","splice","positionIndex","addedPosition","removedPosition","isRoundCheckSumOK","checkSum","reduce","console","log","onNextRoundClick","updateRoundScore","resetPositions","ls","set","onClearRoundResult","resetPlayersResult","newScore","objectSpread","setState","memo","defineProperty","persistedState","get","card","bordered","disabled","onEndGameClick","table","dataSource","pagination","React","Component","App","className","components_GameRun","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4fcacacc.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Row, Col, Dropdown, Menu, Icon } from 'antd';\n\nconst winItems = [\n  {\n    name: \"Black\",\n    score: 1,\n  },\n  {\n    name: \"Red\",\n    score: 2,\n  },\n  {\n    name: \"3 Pairs\",\n    score: 3,\n  },\n  {\n    name: \"FoaK\",\n    score: 4,\n  },\n]\n\nconst loseItems = [\n  {\n    name: \"Black\",\n    score: -1,\n  },\n  {\n    name: \"Red\",\n    score: -2,\n  },\n  {\n    name: \"3 Pairs\",\n    score: -3,\n  },\n  {\n    name: \"FoaK\",\n    score: -4,\n  },\n]\n\nexport const RoundPosition = (props) => {\n  const { positions, player, playerIndex, onPositionClick, onExtraItemClick } = props;\n\n  const winMenu = (\n    <Menu style={{ backgroundColor: '#87d068' }}>\n      {\n        winItems.map((item, index) => {\n          return (\n            <Menu.Item\n              onClick={() => onExtraItemClick(playerIndex, item)}\n              key={index}\n            >\n              {item.name}\n            </Menu.Item>\n          )\n        })\n      }\n    </Menu>\n  )\n\n  const loseMenu = (\n    <Menu style={{ backgroundColor: '#f50' }}>\n      {\n        loseItems.map((item, index) => {\n          return (\n            <Menu.Item\n              onClick={() => onExtraItemClick(playerIndex, item)}\n              key={index}\n            >\n              {item.name}\n            </Menu.Item>\n          )\n        })\n      }\n    </Menu>\n  )\n\n  return (\n    <Row justify=\"start\" type=\"flex\" gutter={4}>\n      {\n        Object.keys(positions).map((key) => {\n          return (\n            positions[key].selected == false && player.position == 0 ?\n              <Col>\n                <Button\n                  onClick={() => onPositionClick(playerIndex, key)}\n                  shape=\"circle\">\n                  {key}\n                </Button>\n              </Col> : null\n          )\n        })\n      }\n      <Col>\n        <Dropdown overlay={winMenu}>\n          <Button style={{ backgroundColor: '#87d068' }} shape=\"circle\">\n            <Icon type=\"plus\"></Icon>\n          </Button>\n        </Dropdown>\n      </Col>\n      <Col>\n        <Dropdown overlay={loseMenu}>\n          <Button style={{ backgroundColor: '#f50' }} shape=\"circle\">\n            <Icon type=\"minus\"></Icon>\n          </Button>\n        </Dropdown>\n      </Col>\n    </Row>\n  )\n}","import React from 'react';\nimport { Row, Col, Tag, Button } from 'antd';\n\nexport const PlayerRoundResult = (props) => {\n  const { player, playerIndex, items, onRemoveItem, onRemovePosition } = props;\n\n  return (\n    <Row justify=\"start\" type=\"flex\">\n      {player.position != 0 ?\n        <Col>\n          <Tag\n            color=\"#108ee9\"\n            onClick={() => onRemovePosition(playerIndex)}\n          >\n            {player.position}\n          </Tag>\n        </Col> : null}\n      {\n        items.map((item, index) => {\n          return (\n            <Col key={index}>\n              <Tag\n                color={item.score >= 0 ? \"#87d068\" : \"#f50\"}\n                onClick={(e) => {\n                  e.preventDefault();\n                  onRemoveItem(playerIndex, index)\n                }}>\n                {item.name}\n              </Tag>\n            </Col>\n          )\n        })\n      }\n    </Row>\n  );\n}","import React from 'react';\nimport { Table, Button, Tag, Row, Col, Card } from 'antd';\nimport ls from 'local-storage'\nimport { RoundPosition } from './RoundPosition';\nimport { Extra } from './Extra';\nimport { PlayerRoundResult } from './PlayerRoundResult';\nimport './Component.css';\n\nconst initPlayers = [\n  {\n    key: '1',\n    name: 'An',\n    score: 0,\n    earn: 0,\n    roundResult: [],\n    position: 0,\n  },\n  {\n    key: '2',\n    name: 'Đạt',\n    score: 0,\n    earn: 0,\n    roundResult: [],\n    position: 0,\n  },\n  {\n    key: '3',\n    name: 'Sơn',\n    score: 0,\n    earn: 0,\n    roundResult: [],\n    position: 0,\n  },\n  {\n    key: '4',\n    name: 'Thịnh',\n    score: 0,\n    earn: 0,\n    roundResult: [],\n    position: 0,\n  },\n  {\n    key: '5',\n    name: 'Trung',\n    score: 0,\n    earn: 0,\n    roundResult: [],\n    position: 0,\n  },\n  {\n    key: '6',\n    name: 'Vinh',\n    score: 0,\n    earn: 0,\n    roundResult: [],\n    position: 0,\n  },\n]\n\nconst initPositions = {\n  1: {\n    selected: false,\n    score: 2,\n  },\n  2: {\n    selected: false,\n    score: 1,\n  },\n  3: {\n    selected: false,\n    score: -1,\n  },\n  4: {\n    selected: false,\n    score: -2,\n  },\n}\n\nclass GameRun extends React.Component {\n  constructor(props) {\n    super(props)\n    const persistedState = ls.get('easyMoney')\n    if (persistedState) {\n      this.state = persistedState\n    } else {\n      this.state = {\n        players: initPlayers,\n        positions: initPositions,\n      }\n    }\n    this.initColumns()\n  }\n\n  initColumns = () => {\n    this.columns = [\n      {\n        title: 'Name',\n        dataIndex: 'name',\n      },\n      {\n        title: 'Position',\n        dataIndex: '',\n        render: (text, record, index) =>\n          <RoundPosition\n            positions={this.state.positions}\n            player={record}\n            playerIndex={index}\n            onPositionClick={this.selectPosition}\n            onExtraItemClick={this.addExtraItem}\n          />,\n      },\n      {\n        title: 'Round Result',\n        dataIndex: 'roundResult',\n        render: (text, record, index) =>\n          <PlayerRoundResult\n            player={record}\n            playerIndex={index}\n            items={record.roundResult}\n            onRemoveItem={this.removePlayerItem}\n            onRemovePosition={this.removePlayerPosition}\n          />\n      },\n      {\n        title: 'Earn',\n        dataIndex: 'earn',\n      },\n      {\n        title: 'Score',\n        dataIndex: 'score',\n      },\n    ];\n  }\n\n  addExtraItem = (playerIndex, item) => {\n    let player = this.state.players[playerIndex]\n    player.earn += item.score\n    player.roundResult.push(item)\n    this.forceUpdate()\n  }\n\n  removePlayerItem = (playerIndex, itemIndex) => {\n    let player = this.state.players[playerIndex]\n    let item = player.roundResult[itemIndex]\n    player.earn -= item.score\n    player.roundResult.splice(itemIndex, 1)\n    this.forceUpdate()\n  }\n\n  selectPosition = (playerIndex, positionIndex) => {\n    let addedPosition = this.state.positions[positionIndex]\n    addedPosition.selected = true\n\n    let player = this.state.players[playerIndex]\n    player.position = positionIndex\n    player.earn += addedPosition.score\n\n    this.forceUpdate()\n  }\n\n  removePlayerPosition = (playerIndex) => {\n    let player = this.state.players[playerIndex]\n    let positionIndex = player.position\n    let removedPosition = this.state.positions[positionIndex]\n\n    removedPosition.selected = false\n    player.position = 0\n    player.earn -= removedPosition.score\n\n    this.forceUpdate()\n  }\n\n  isRoundCheckSumOK = () => {\n    const players = this.state.players\n    const checkSum = players.reduce((checkSum, player) => {\n      return checkSum + player.earn\n    }, 0)\n\n    console.log(\"checksum:\", checkSum)\n    return checkSum == 0\n  }\n\n  onNextRoundClick = () => {\n    this.updateRoundScore()\n    this.resetPositions()\n    ls.set('easyMoney', this.state)\n  }\n\n  onClearRoundResult = () => {\n    this.resetPlayersResult()\n    this.resetPositions()\n  }\n\n  updateRoundScore = () => {\n    const players = this.state.players.map((player) => {\n      const newScore = player.score + player.earn\n      return {\n        ...player,\n        earn: 0,\n        score: newScore,\n        position: 0,\n        roundResult: [],\n      }\n    })\n\n    this.setState({\n      players,\n    })\n  }\n\n  resetPlayersResult = () => {\n    const players = this.state.players.map((player) => {\n      return {\n        ...player,\n        earn: 0,\n        position: 0,\n        roundResult: [],\n      }\n    })\n\n    this.setState({\n      players,\n    })\n  }\n\n  resetPositions = () => {\n    const positions = Object.keys(this.state.positions).reduce((memo, positionIndex) => {\n      const position = this.state.positions[positionIndex]\n      return {\n        ...memo,\n        [positionIndex]: {\n          selected: false,\n          score: position.score,\n        }\n      }\n    }, {})\n\n    this.setState({\n      positions,\n    })\n  }\n\n  render() {\n    return (\n      <Card bordered={false}>\n        <Row gutter={8} justify=\"start\" type=\"flex\">\n          <Col>\n            <Button\n              disabled={!this.isRoundCheckSumOK()}\n              onClick={this.onNextRoundClick}\n              type=\"primary\"\n            >\n              Next Round\n            </Button>\n          </Col>\n          <Col>\n            <Button onClick={this.onClearRoundResult}>Clear</Button>\n          </Col>\n          <Col>\n            <Button onClick={this.onEndGameClick} type=\"danger\">End Game</Button>\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Table\n            dataSource={this.state.players}\n            columns={this.columns}\n            bordered\n            pagination={false}\n          />\n        </Row>\n      </Card>\n    )\n  }\n}\n\nexport default GameRun;\n","import React from 'react';\nimport GameRun from './components/GameRun';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <GameRun />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}